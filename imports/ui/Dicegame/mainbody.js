import React, { Component } from 'react'; 
import { Slider } from 'react-semantic-ui-range'
import { Grid,Image,Button,Input, Segment, Divider, Dimmer,Popup } from 'semantic-ui-react';
import BetBar from './BetBar';
import BetTable from './BetTable';


 class Gamepage extends Component {
  state={payout:2,
    RollNumber:50,
    odds:2.00,
    Winchance:49,
    dice:'Roll',
    Betamount:1.0000,
    active:false,
    dimmercount:0,
    content:'',
    dimmer1:false,
    dimmer2:false,
    dimmer3:false,
    dimmer4:false,
    dimmer5:false,
    dimmer6:false,
    dimmer7:false,
    dimmer8:false,
    StartButtondisabled:false,
    StopButtondisabled:true,
    BackButtondisabled:true,
    NextButtondisabled:true,

  }

    // Roll animation button click event
  onClick=()=>{
      this.setState({dice:<img style={{width:'30px',height:'30px'}} src='http://www.animatedimages.org/data/media/710/animated-dice-image-0003.gif'/>})
    }

    // Input value echange event
  onChangeBetamount=()=>{
      const {odds}=this.state
      const re = /^[0-9\b]+(\.\d{0,4})?$/
      if(event.target.value === '' || re.test(event.target.value))
      {
        this.setState({payout:event.target.value*odds,Betamount:event.target.value})
      }
    }

    // Button 1/2 click event
  onClick21 = () => {
      const {Betamount,payout,odds}=this.state    
      this.setState((state, props) => {
        return {
          Betamount: Betamount/2,  // update Betamount data
        }
      })   

      this.setState((state, props) => {
        return{
          payout: state.Betamount*odds  // Using the updated data
        }
      })

      if(Betamount<0.1)
      {
        this.setState({Betamount:0.1000}) // if Betamount inferior to 0.1
      }
    }

    //when the mouse is unfocus from the element, this event is triggered to let the Betamount be always 0.1
  InputMouseunfocus=()=>{
      const {Betamount,odds}=this.state
      if(Betamount<0.1) 
      {
        this.setState((state, props) => {
          return {
            Betamount: 0.1000,  
          }
        }) // update the data
        this.setState((state, props) => {
          return {
            payout: state.Betamount*odds   // using updated data
          }
        })
      }
    }
    // 2x button click event
  onClick2 = () => {
      const {Betamount,payout,odds}=this.state
    
         this.setState({Betamount: Betamount*2})  
       

      this.setState((state, props) => {
        return {
          payout: state.Betamount*odds 
        }
      })
    }
    //Turorial Next button event
  OnclickNext=()=>{
    const {dimmercount,content}=this.state
    if(dimmercount<7){
      this.setState({dimmercount:dimmercount+1})
     
      this.setState((state, props) => {
        switch(state.dimmercount){
          case 1 :
          return {
            content:'The 1st step is to choose your type of token to bet. Click Next button to continue',
            dimmer1:false, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true
              };
          case 2 :
            return {
            content:'The 2nd step is to put the amount you want to bet, you have the left part to put the amount and the right part which indicates the amount you will probably win   ',
            dimmer1:true, dimmer2:false,dimmer3:false,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true,
            };
          case 3 :
          return {
            content:'This part is the general bet information about your choosen number, about the corresponding bonus, about the win chance. ',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:false,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true,
              };
          case 4 :
          return {
            content:'The 3rd step is to choose the number you want to bet by pulling the slider',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:false,dimmer6:true,dimmer7:true,dimmer8:true,
              };
          case 5 :
          return {
            content:'The 4th setp is to click the ROLL button to get the uncontrollabe random number which is generated by the blockchain, when the animation of rolling dice is stopped, you will have the game result. You can also have your wallet information in this row',
            dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:false,dimmer7:true,dimmer8:true,
              };
          case 6 :
          return {
            content:'This part is to tell you of the mine ratio which means 1 eos bet can exchange 1 portion of our game plateform token',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:false,dimmer8:true,
              };
          case 7 :
          return {
            content:'This part is the table which displays the history of all the game of all players you can also check your game history here ',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:false,
              };
          };
        })
      }
  }
  //Tutorial Back button event 
  OnclickBack=()=>{
    const {dimmercount}=this.state
    if (dimmercount>1){
      this.setState({dimmercount:dimmercount-1})
      console.log({dimmercount})
      this.setState((state, props) => {
        switch(state.dimmercount){
          case 1 :
          return {
            content:'The 1st step is to choose your type of token to bet. Click Next button to continue',
            dimmer1:false, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true
              };

          case 2 :
          return {
            content:'The 2nd step is to put the amount you want to bet, you have the left part to put the amount and the right part which indicates the amount you will probably win   ',
            dimmer1:true, dimmer2:false,dimmer3:false,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true,
            };
          case 3 :
          return {
            content:'This part is the general bet information about your choosen number, about the corresponding bonus, about the win chance. ',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:false,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true,
              };
          case 4 :
          return {
            content:'The 3rd step is to choose the number you want to bet by pulling the slider',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:false,dimmer6:true,dimmer7:true,dimmer8:true,
              };
          case 5 :
          return {
            content:'The 4th setp is to click the ROLL button to get the uncontrollabe random number which is generated by the blockchain, when the animation of rolling dice is stopped, you will have the game result. You can also have your wallet information in this row',
            dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:false,dimmer7:true,dimmer8:true,
              };
          case 6 :
          return {
            content:'This part is to tell you of the mine ratio which means 1 eos bet can exchange 1 portion of our game plateform token',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:false,dimmer8:true,
              };
          case 7 :
          return {
            content:'This part is the table which displays the history of all the game of all players you can also check your game history here ',dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:false,
              };
          };
     })
    }
  }
  // Tutorial start button event
  OnclickStart=()=>{
    this.setState({
      content:'The tutorial is about to start. Please Click Next button to continue and Stop button to stop the tutorial',
      dimmer1:true, dimmer2:true,dimmer3:true,dimmer4:true,dimmer5:true,dimmer6:true,dimmer7:true,dimmer8:true,dimmercount:0, 
      StartButtondisabled:true,StopButtondisabled:false,NextButtondisabled:false,BackButtondisabled:false
    })
  }  
  // Tutorial stop button event
  OnclickStop=()=>{
    this.setState({
      content:'Tutorial Stoped',
      dimmer1:false, dimmer2:false,dimmer3:false,dimmer4:false,dimmer5:false,dimmer6:false,dimmer7:false,dimmer8:false,dimmercount:0,
      StartButtondisabled:false,StopButtondisabled:true,NextButtondisabled:true,BackButtondisabled:true
    }) 
  } 
  
  // -----------------------------------------------------------Render------------------------------------------------------------------------------
  render() {
    const {payout,RollNumber,odds,Winchance,dice,Betamount,content,StartButtondisabled,StopButtondisabled,NextButtondisabled,BackButtondisabled}=this.state;
    const {dimmer1,dimmer2,dimmer3,dimmer4,dimmer5,dimmer6,dimmer7,dimmer8}=this.state
    // Slider configuration
    const settings = {
      start: 50,
      min:2,
      max:96,
      step:1,
      onChange: (value)  => {
          this.setState({
            RollNumber:value,Winchance:value-1
          })
          this.setState((state, props) => {
            return {
              odds: (98/(value-1)), //Update DATA
            };
          });

          this.setState((state, props) => {
            return {
              payout: state.odds*Betamount  //Using Update Data
            };
          });      
      }
    }
    // rendering 
    return (
      <div className='Game'>
        {/*--------------------------------------------Tutorial Button--------------------------------------------------------------*/}
        <Grid group style={{backgroundColor:'#110e34'}}>
           <Grid.Row>
            <text style={{fontFamily:'bold',fontSize:'25px',color:'white',position:'relative',left:'10%'}}>Tutorial button</text>
            <Popup 
            trigger={
            <Button.Group style={{position:'relative',left:'11%'}} >
              <Button labelPosition='left' icon='left chevron' content='Back' onClick={this.OnclickBack}  disabled={BackButtondisabled} />
              <Button  content='Start' onClick={this.OnclickStart} disabled={StartButtondisabled}/>
              <Button  content='Stop' onClick={this.OnclickStop} disabled={StopButtondisabled} />
              <Button labelPosition='right' icon='right chevron' content='Next' onClick={this.OnclickNext} disabled={NextButtondisabled} />
            </Button.Group>} 
            content={content} basic on='focus' position='bottom right' />
           </Grid.Row>
           
           {/* ----------------------------------------First Row: Bet Coin choose------------------------------------------------*/ }
            <Grid.Row >  
             <Dimmer active={dimmer1}/>
              <Grid.Column width='3'></Grid.Column>
              
              <Grid.Column width ='10'> 
                <div style={{backgroundColor:'#110e34'}}>
                <Button color='facebook' style={{position:'relative',left:'37%'}}>
                  <Image size='mini' src='https://coindoo.com/wp-content/uploads/2018/07/eos-cryptocurrency-crypto-currency-coin-logo-3cbf68c28ac9549e-512x512.png' /> EOS
                </Button>

                <Button color='facebook' style={{position:'relative',left:'38%'}}>
                  <Image size='mini' src='https://www.datnoid.com/coins/ETH/eth.svg' />ANGE
                </Button>
                </div>
              </Grid.Column> 

              <Grid.Column width ='3'></Grid.Column>   
            </Grid.Row> 
           {/* --------------------------------------Second Row : Bet description------------------------------------------------*/ }  
            <Grid.Row>
            <Dimmer active={dimmer2}/>
            <Grid.Column width='3'></Grid.Column>

            <Grid.Column width='10' >
              <span style={{position:'relative', color:'grey', fontSize:'16px', left:'10%'}}>
               <img src ='http://pngimg.com/uploads/poker/poker_PNG40.png' style={{width:'20px', height:'20px'}}/> Bet Amount
              </span>

              <span style={{position:'relative',color:'grey', fontSize:'16px',left:'50%'}}>
                <img  src ='http://pngimg.com/uploads/coin/coin_PNG36936.png'  style={{width:'20px', height:'20px'}} /> Payout
              </span>
            </Grid.Column>

            <Grid.Column width='3'></Grid.Column>
          </Grid.Row> 
            {/* -----------------------------------------Third Row : Bet Amount choose-----------------------------------------------*/ }  
          <Grid.Row>
            <Dimmer active={dimmer3}/>
            <Grid.Column width='3'></Grid.Column>
  
            <Grid.Column width='6'>
              <Segment style={{backgroundColor:'#3a5998', position:'relative', left:'15%',width:500,height:70}}>
                <img  src='https://coindoo.com/wp-content/uploads/2018/07/eos-cryptocurrency-crypto-currency-coin-logo-3cbf68c28ac9549e-512x512.png' style={{width:'25px', height:'25px'}} />
                <Input> 
                  <input maxLength='5' value={Betamount.toFixed(4)} onBlur={this.InputMouseunfocus} onChange={this.onChangeBetamount} size='7' spellCheck='false'  style={{fontSize:'20px',color:'white',backgroundColor:'#3b435c',textAlign:'center',border:'none',fontWeight:'bold', }} type="text" />
                  <span style={{color:'grey',fontSize:'16px'}}> <br/> &ensp;EOS</span>   
                  
                  <Button.Group>
                    <Button size='big' color='facebook' onClick={this.onClick21} onBlur={this.InputMouseunfocus} >1/2</Button>
                    <Button size='big' color='facebook' onClick={this.onClick2}>x2</Button>
                    <Button size='big' color='facebook'>Max</Button>
                  </Button.Group>

                </Input> 
              </Segment>
            </Grid.Column>

            <Grid.Column width='6'>
              <Segment  style={{backgroundColor:'#3a5998',width: 250, height: 70,position:'relative',left:'-3%'}}>
                <p style={{position:'relative',color:'white', fontSize:'20px', left:'0%'}}> <img  src='https://betdice.one/img/eos_icon_big_new.png' style={{width:'25px', height:'25px'}} /> &ensp;&ensp;{payout.toFixed(3)}&ensp;<span style={{color:'grey',fontSize:'16px'}}>EOS</span></p>
              </Segment>
            </Grid.Column> 

            <Grid.Column width='3'></Grid.Column>
          </Grid.Row>   
        {/* -----------------------------------------Fourth Row: General Bet  information ------------------------------------------------*/ }  
          <Grid.Row>
          <Dimmer active={dimmer4}/>
            <Grid.Column width='4'></Grid.Column>

            <Grid.Column width='7'>
              <Grid columns={3} divided style={{backgroundColor:'#3a5998'}}>
                <Grid.Column >
                  <text style={{position :'relative',left :'20%',color:'grey'}}>
                  ROLL UNDER TO WIN <br/><br/><span style={{fontSize :'40px',position:'relative',left:'20%',color:'white'}}>{RollNumber}</span>
                  </text>
                </Grid.Column>
                <Grid.Column >
                  <text  style={{position :'relative',left :'40%',color:'grey'}}>
                  ODDS<br/> <br/> <span style={{fontSize :'40px',position:'relative',left:'-10%',color:'white'}}>{odds.toFixed(3)}x</span>
                  </text> 
                </Grid.Column>
                <Grid.Column >
                  <text style={{position :'relative',left :'40%',color:'grey'}}>
                  WIN CHANCE <br/> <br/><span style={{fontSize :'40px',position:'relative',left:'0%',color:'white'}}>{Winchance}%</span> 
                  </text> 
                </Grid.Column>
              </Grid>
              <br/>
            </Grid.Column>

           <Grid.Column width='5'></Grid.Column>
          </Grid.Row>
       {/* -----------------------------------------Fifth Row: Slider------------------------------------------------*/ }  
          <Grid.Row>
            <Dimmer active={dimmer5}/>
            <Grid.Column width='4'></Grid.Column>

            <Grid.Column width='7'>
              <Slider  color="green" inverted settings={settings}/>
            </Grid.Column>

            <Grid.Column width='5'></Grid.Column>
          </Grid.Row>
      {/* -----------------------------------------Sixth Row: Player's fortune and Roll button------------------------------------------------*/ }  
          <Grid.Row>
          <Dimmer active={dimmer6}/>
            <span style={{position:'relative', color:'white', fontSize:'40px', left:'25%'}}> <Image inline size='mini' src ='https://betdice.one/img/eos_icon_big_new.png'/> 0.000</span>
            <span style={{position:'relative', color:'white', fontSize:'40px', left:'54%'}}> <Image inline size='mini' src ='https://www.datnoid.com/coins/ETH/eth.svg'/> 0.000</span>
            <Button  color='blue' size='massive' style={{position:'relative',left:'29%'}} onClick={this.onClick}> 
            <Button.Content>{dice}</Button.Content>
            </Button>
          </Grid.Row>
            <br/>
       {/* -----------------------------------------Seventh Row: Mine information------------------------------------------------*/ }       
          <Grid.Row>
          <Dimmer active={dimmer7}/>
            <Segment circular style={{width:'1000',height:'60',backgroundColor:'#3a5998', position:'relative', left:'40%'}}>
            <text style={{color:'white'}}>Bet to get : <span style={{fontSize:'40px'}}>100</span> ANGE</text>
            </Segment>
          </Grid.Row>
      {/* ----------------------------------------Eighth Row-Player BET history------------------------------------------------*/ }  
          <Grid.Row>
          <Dimmer active={dimmer8}/>
          <Grid.Column width='3'></Grid.Column>

          <Grid.Column width='9'>
            <Segment style={{backgroundColor:'#3a5998'}}>
              <BetBar/> {/*Navigation Bar*/}
              <BetTable/> {/*Table Data*/}
            </Segment> 
          </Grid.Column>
          
          <Grid.Column width='5'></Grid.Column>
          </Grid.Row>
        </Grid>
      </div>

    ); // End of return
  }//end of render method
}

export default Gamepage